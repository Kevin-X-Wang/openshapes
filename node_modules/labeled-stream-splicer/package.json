{
  "_args": [
    [
      {
        "raw": "labeled-stream-splicer@^2.0.0",
        "scope": null,
        "escapedName": "labeled-stream-splicer",
        "name": "labeled-stream-splicer",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\kevin\\openshapes\\node_modules\\browserify"
    ]
  ],
  "_from": "labeled-stream-splicer@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "labeled-stream-splicer@2.0.1",
  "_location": "/labeled-stream-splicer",
  "_nodeVersion": "9.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/labeled-stream-splicer_2.0.1_1521709528629_0.008789460259379878"
  },
  "_npmUser": {
    "name": "goto-bus-stop",
    "email": "rene@kooi.me"
  },
  "_npmVersion": "5.7.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "labeled-stream-splicer@^2.0.0",
    "scope": null,
    "escapedName": "labeled-stream-splicer",
    "name": "labeled-stream-splicer",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/browserify"
  ],
  "_resolved": "https://registry.npmjs.org/labeled-stream-splicer/-/labeled-stream-splicer-2.0.1.tgz",
  "_shasum": "9cffa32fd99e1612fd1d86a8db962416d5292926",
  "_shrinkwrap": null,
  "_spec": "labeled-stream-splicer@^2.0.0",
  "_where": "C:\\Users\\kevin\\openshapes\\node_modules\\browserify",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/labeled-stream-splicer/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1",
    "isarray": "^2.0.4",
    "stream-splicer": "^2.0.0"
  },
  "description": "stream splicer with labels",
  "devDependencies": {
    "browser-pack": "^2.0.1",
    "concat-stream": "^1.4.6",
    "module-deps": "^2.1.2",
    "tape": "^2.12.1",
    "through2": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-MC94mHZRvJ3LfykJlTUipBqenZz1pacOZEMhhQ8dMGcDHs0SBE5GbsavUXV7YtP3icBW17W0Zy1I0lfASmo9Pg==",
    "shasum": "9cffa32fd99e1612fd1d86a8db962416d5292926",
    "tarball": "https://registry.npmjs.org/labeled-stream-splicer/-/labeled-stream-splicer-2.0.1.tgz",
    "fileCount": 15,
    "unpackedSize": 8870
  },
  "gitHead": "1efcc053aa2b523e3f3b671949b7aea6c17a9a9f",
  "homepage": "https://github.com/substack/labeled-stream-splicer",
  "keywords": [
    "splice",
    "stream",
    "labels",
    "mutable",
    "pipeline"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ahdinosaur",
      "email": "michael.williams@enspiral.com"
    },
    {
      "name": "anandthakker",
      "email": "vestibule@anandthakker.net"
    },
    {
      "name": "ashaffer88",
      "email": "darawk@gmail.com"
    },
    {
      "name": "balupton",
      "email": "b@lupton.cc"
    },
    {
      "name": "bpostlethwaite",
      "email": "post.ben.here@gmail.com"
    },
    {
      "name": "bret",
      "email": "bcomnes@gmail.com"
    },
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    },
    {
      "name": "dcousens",
      "email": "npm@dcousens.com"
    },
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    },
    {
      "name": "elnounch",
      "email": "contact@elnounch.net"
    },
    {
      "name": "emilbayes",
      "email": "github@tixz.dk"
    },
    {
      "name": "feross",
      "email": "feross@feross.org"
    },
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "fpereira1",
      "email": "pereira.filype@gmail.com"
    },
    {
      "name": "garann",
      "email": "garann@gmail.com"
    },
    {
      "name": "gkatsev",
      "email": "me@gkatsev.com"
    },
    {
      "name": "goto-bus-stop",
      "email": "rene@kooi.me"
    },
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    },
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    },
    {
      "name": "jmm",
      "email": "npm-public@jessemccarthy.net"
    },
    {
      "name": "jprichardson",
      "email": "jprichardson@gmail.com"
    },
    {
      "name": "jryans",
      "email": "jryans@gmail.com"
    },
    {
      "name": "leichtgewicht",
      "email": "martin.heidegger@gmail.com"
    },
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "mattdesl",
      "email": "dave.des@gmail.com"
    },
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    },
    {
      "name": "mellowmelon",
      "email": "palmermebane@gmail.com"
    },
    {
      "name": "parshap",
      "email": "parshap+npm@gmail.com"
    },
    {
      "name": "pkrumins",
      "email": "peteris.krumins@gmail.com"
    },
    {
      "name": "sethvincent",
      "email": "sethvincent@gmail.com"
    },
    {
      "name": "stevemao",
      "email": "maochenyan@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    },
    {
      "name": "tehshrike",
      "email": "me@JoshDuff.com"
    },
    {
      "name": "terinjokes",
      "email": "terinjokes@gmail.com"
    },
    {
      "name": "thlorenz",
      "email": "thlorenz@gmx.de"
    },
    {
      "name": "ungoldman",
      "email": "ungoldman@gmail.com"
    },
    {
      "name": "yerkopalma",
      "email": "yerko.palma@usach.cl"
    },
    {
      "name": "yoshuawuyts",
      "email": "yoshuawuyts@gmail.com"
    },
    {
      "name": "zertosh",
      "email": "zertosh@gmail.com"
    }
  ],
  "name": "labeled-stream-splicer",
  "optionalDependencies": {},
  "readme": "# labeled-stream-splicer\n\n[stream splicer](https://npmjs.org/package/stream-splicer) with labels\n\n[![build status](https://secure.travis-ci.org/substack/labeled-stream-splicer.png)](http://travis-ci.org/substack/labeled-stream-splicer)\n\n# example\n\nHere's an example that exposes a label for `deps` and `pack`:\n\n``` js\nvar splicer = require('labeled-stream-splicer');\nvar through = require('through2');\nvar deps = require('module-deps');\nvar pack = require('browser-pack');\nvar lstream = require('lstream');\n\nvar pipeline = splicer.obj([\n    'deps', [ deps() ],\n    'pack', [ pack({ raw: true }) ]\n]);\n\npipeline.get('deps').unshift(lstream());\n\npipeline.get('deps').push(through.obj(function (row, enc, next) {\n    row.source = row.source.toUpperCase();\n    this.push(row);\n    next();\n}));\n\nprocess.stdin.pipe(pipeline).pipe(process.stdout);\n```\n\nHere the `deps` sub-pipeline is augmented with a post-transformation that\nuppercases its source input.\n\n# methods\n\n``` js\nvar splicer = require('labeled-stream-splicer')\n```\n\nThe API is the same as\n[stream-splicer](https://npmjs.org/package/stream-splicer),\nexcept that `pipeline.get()`, `pipeline.splice()`, and `pipeline.indexOf()` can\naccept string labels in addition to numeric indexes.\n\n## var pipeline = splicer(streams, opts)\n\nCreate a `pipeline` duplex stream given an array of `streams`. Each `stream`\nwill be piped to the next. Writes to `pipeline` get written to the first stream\nand data for reads from `pipeline` come from the last stream.\n\nTo signify a label, a stream may have a `.label` property or a string may be\nplaced in the `streams` array.\n\nFor example, for streams `[ a, 'foo', b, c, 'bar', d ]`, this pipeline is\nconstructed internally:\n\n```\na.pipe(b).pipe(c).pipe(d)\n```\n\nwith a label `'foo`' that points to `b` and a label `'bar'` that points to `d`.\nIf `a` or `c` has a `.label` property, that label would be used for addressing.\n\nInput will get written into `a`. Output will be read from `d`.\n\nIf any of the elements in `streams` are arrays, they will be converted into\nnested labeled pipelines. This is useful if you want to expose a hookable\npipeline with grouped insertion points.\n\n## var pipeline = splicer.obj(streams, opts)\n\nCreate a `pipeline` with `opts.objectMode` set to true for convenience.\n\n## var removed = pipeline.splice(index, howMany, stream, ...)\n\nSplice the pipeline starting at `index`, removing `howMany` streams and\nreplacing them with each additional `stream` argument provided.\n\nThe streams that were removed from the splice and returned.\n\n`index` can be an integer index or a label.\n\n## pipeline.push(stream, ...)\n\nPush one or more streams to the end of the pipeline.\n\nThe stream arguments may have a `label` property that will be used for string\nlookups.\n\n## var stream = pipeline.pop()\n\nPop a stream from the end of the pipeline.\n\n## pipeline.unshift(stream, ...)\n\nUnshift one or more streams to the begining of the pipeline.\n\nThe stream arguments may have a `label` property that will be used for string\nlookups.\n\n## var stream = pipeline.shift()\n\nShift a stream from the begining of the pipeline.\n\n## var stream = pipeline.get(index)\n\nReturn the stream at index `index`.\n\n`index` can be an integer or a string label.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install labeled-stream-splicer\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/labeled-stream-splicer.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "2.0.1"
}
